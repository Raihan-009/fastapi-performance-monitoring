version: "3.8"

services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    environment:
      POSTGRES_DB: appdb
      POSTGRES_USER: appuser
      POSTGRES_PASSWORD: apppass123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"

    # ← HEALTHCHECK so Compose can wait until pg_isready returns “OK”
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U appuser -d appdb"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build: .
    container_name: fastapi_app
    ports:
      - "8000:8000"

    environment:
      DATABASE_URL: postgresql://appuser:apppass123@postgres:5432/appdb

    # ← wait for the postgres healthcheck to pass before starting
    depends_on:
      postgres:
        condition: service_healthy

    # ← in case of a transient failure, restart and let it try again
    restart: on-failure

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    depends_on:
      - api

volumes:
  postgres_data:
